version: '3.9'

services:
  db:
    image: 'postgres:15-alpine'
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - '127.0.0.1:${DATABASE_PORT}:5432'
    volumes:
      - ./DockerVolumes/PostgresDb:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 3s
      
  amqp:
    image: 'rabbitmq:3.12-management-alpine'
    restart: unless-stopped
    ports:
      - '${AMQP_PORT}:5672'
      - '${AMQP_MANAGEMENT_PORT}:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=${AMQP_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${AMQP_PASSWORD}
    volumes:
      - ./DockerVolumes/RabbitMq/data/:/var/lib/rabbitmq/

  ai:
    build: 
      context: .
      dockerfile: Dockerfile.aiservice
      args:
        - DATABASE_CONNECTION_STRING=Host=${DATABASE_HOST};Username=${DATABASE_USER};Password=${DATABASE_PASSWORD};Database=${DATABASE_NAME}
        - RABBIT_CONNECTION_STRING=Host=amqp;Port=${AMQP_PORT};Username=${AMQP_USERNAME};Password=${AMQP_PASSWORD};ProvidedName=AiService
        - ORIGINAL_FILES_DIRECTORY=/var/lib/localStorage/files/original
        - PROCESSED_FILES_DIRECTORY=/var/lib/localStorage/files/processed
    container_name: object_detection_aiservice
    restart: unless-stopped
    volumes:
      - ${ORIGINAL_FILES_DIRECTORY}:/var/lib/localStorage/files/original
      - ${PROCESSED_FILES_DIRECTORY}:/var/lib/localStorage/files/processed